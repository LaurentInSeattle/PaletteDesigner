<UserControl 
	x:Class="Lyt.Avalonia.PaletteDesigner.Workflow.Wheel.ColorWheelView"
	xmlns:vm="clr-namespace:Lyt.Avalonia.PaletteDesigner.Workflow.Wheel"
	x:DataType="vm:ColorWheelViewModel" 

	xmlns="https://github.com/avaloniaui"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d" d:DesignWidth="700" d:DesignHeight="700"
	
	xmlns:images="using:Lyt.Avalonia.Controls.Images"	
	xmlns:glyphs="using:Lyt.Avalonia.Controls.Glyphs"	
	xmlns:controls="clr-namespace:Lyt.Avalonia.PaletteDesigner.Controls"
	>
	<Grid
		Width="700" Height="700"
		Margin="16"
		>
		<Image
			x:Name="Wheel"
			Width="700" Height="700"
			Source="\Assets\Images\wheel.png"
			Stretch="UniformToFill"
			/>
		<images:RoundedImage
			x:Name="Shades"
			Width="300" Height="300"
			CornerRadius="150"
			Source="{Binding Shades}"
			>
		</images:RoundedImage>
		<Canvas
			Width="700" Height="700"
			>
			<controls:MarkerControl
				x:Name="Secondary1Marker"
				IsVisible="{Binding HasSecondary1Marker}"				
				CanMove="{Binding CanMoveSecondary1}"				
				Tag="Secondary1"
				FillBrush="#A0A0A0"
				StrokeBrush="DarkOrange"
				Canvas.Top="0" Canvas.Left="0"
				/>
			<controls:MarkerControl
				x:Name="Secondary2Marker"
				IsVisible="{Binding HasSecondary2Marker}"				
				CanMove="{Binding CanMoveSecondary2}"				
				Tag="Secondary2"
				FillBrush="#A0A0A0"
				StrokeBrush="Aquamarine"
				Canvas.Top="0" Canvas.Left="0"
				/>
			<controls:MarkerControl
				x:Name="ComplementaryMarker"
				IsVisible="{Binding HasComplementaryMarker}"
				CanMove="{Binding CanMoveComplementary}"
				Tag="Complementary"
				FillBrush="#F0F0F0"
				StrokeBrush="DarkBlue"
				Canvas.Top="0" Canvas.Left="0"
				/>
			<controls:MarkerControl
				x:Name="PrimaryMarker"
				IsVisible="True"
				CanMove="True"
				Tag="Primary"
				FillBrush="#404040"
				StrokeBrush="Aquamarine"
				Canvas.Top="0" Canvas.Left="0"
				/>
			<controls:MarkerControl
				x:Name="LighterShadeMarker"
				Tag="Lighter"
				IsVisible="True"
				CanMove="True"
				IsWheel="False"
				Dimension="13"
				FillBrush="#A0A0A0"
				StrokeBrush="DarkGreen"
				Canvas.Top="300" Canvas.Left="300"
				/>
			<controls:MarkerControl
				x:Name="LightShadeMarker"
				Tag="Light"
				IsVisible="True"
				CanMove="True"
				IsWheel="False"
				Dimension="13"
				FillBrush="#A0A0A0"
				StrokeBrush="DarkGreen"
				Canvas.Top="300" Canvas.Left="300"
				/>
			<controls:MarkerControl
				x:Name="DarkShadeMarker"
				Tag="Dark"
				IsVisible="True"
				CanMove="True"
				IsWheel="False"
				Dimension="13"
				FillBrush="#A0A0A0"
				StrokeBrush="DarkGreen"
				Canvas.Top="300" Canvas.Left="300"
				/>
			<controls:MarkerControl
				x:Name="DarkerShadeMarker"
				Tag="Darker"
				IsVisible="True"
				CanMove="True"
				IsWheel="False"
				Dimension="13"
				FillBrush="#A0A0A0"
				StrokeBrush="DarkGreen"
				Canvas.Top="300" Canvas.Left="300"
				/>
			<!-- This one on top so that it can always be moved -->
			<controls:MarkerControl
				x:Name="BaseShadeMarker"
				Tag="Base"
				IsVisible="True"
				CanMove="True"
				IsWheel="False"
				Dimension="13"
				FillBrush="#404040"
				StrokeBrush="DarkOrange"
				Canvas.Top="300" Canvas.Left="300"
				/>
		</Canvas>

		<glyphs:GlyphButton
			Style="{StaticResource AppToolbarIconButton}"
			VerticalAlignment="Top" HorizontalAlignment="Right"
			Behaviour="Continuous"
			Text="{DynamicResource Design.ColorWheel.Rotate}"
			GlyphSource="arrow_rotate_clockwise"
			Command="{Binding OnRotateClockwise}"
			Margin="4"
			GlyphStrokeThickness="0.05" 
			/>
		<glyphs:GlyphButton
			Style="{StaticResource AppToolbarIconButton}"
			Behaviour="Continuous"
			VerticalAlignment="Top" HorizontalAlignment="Left"
			Margin="4"
			Text="{DynamicResource Design.ColorWheel.Rotate}"
			GlyphSource="arrow_rotate_counterclockwise"
			Command="{Binding OnRotateCounterClockwise}"
			GlyphStrokeThickness="0.05" 
			/>
		<glyphs:GlyphButton
			Style="{StaticResource AppToolbarIconButton}"
			VerticalAlignment="Bottom" HorizontalAlignment="Right"
			Margin="4"
			ButtonBackground="BorderlessRectangle"
			Text="{DynamicResource Design.ColorWheel.Flip}"
			GlyphAngle="-20"
			GlyphSource="arrow_swap"
			Command="{Binding OnSwap}"
			GlyphStrokeThickness="0.05" 
			/>
		<glyphs:GlyphButton
			Style="{StaticResource AppToolbarIconButton}"
			VerticalAlignment="Bottom" HorizontalAlignment="Left"
			Margin="4"
			ButtonBackground="BorderlessRectangle"
			Text="{DynamicResource Design.ColorWheel.Reset}"
			GlyphSource="data_line"
			Command="{Binding OnResetShades}"
			GlyphStrokeThickness="0.05" 
			/>
	</Grid>
</UserControl>
